







@function em($pixels, $context: $fs-def) {
  @return #{$pixels/$context}em;
}
@function fixPx( $string ){
	@return str-slice( quote($string), 1, str-length(quote($string))-2 );
}

@mixin placeholder-color( $color ) {
	&::-moz-placeholder { 
		color: $color;
		opacity: 1; 
	}
	&:-ms-input-placeholder { 
		color:$color; 
	}
	&::-webkit-input-placeholder { 
		color: $color; 
	}
	&::-ms-expand { 
		border: 0;
		background-color: transparent; 
	}
}



@mixin img-auto-adaptive( $width: auto ){
	img:not(.boxes-ignore){
		max-height: 100%;
		max-width: 100%;
		height: auto;
		margin: 0 auto;
		display: block;
		&:not([width]){

			@if $width == auto{
				width: auto;
			}
			@else{
				width: $width;
			}
		}
	}
}






@mixin boxes-items( $width: 75, $items: 3, $tag: figure ) {

	letter-spacing: -15px;
	*{
		letter-spacing: 0;
	}
	$mrow: 1.29;
	//$mrow : ( (100 - $width)/($items*2) );
	$wid: (100-$mrow*($items*2))/$items;

	@if $items == 1{
		$mrow: 0;
		$wid: 100;
	}
	#{$tag}, .boxes-cell{
		display: inline-block;
		vertical-align: top;
	}
	
	&:not(.serried){
		margin-left: -$mrow#{"%"};
		margin-right: -$mrow#{"%"};
	}
	&:not(.serried){
		#{$tag}, .boxes-cell{
			margin-left:  $mrow#{"%"};
			margin-right: $mrow#{"%"};
			width: $wid#{"%"};
		}
	}
	#{$tag}, .boxes-cell{
		width: (100/$items)#{"%"};
	}



}
@mixin cols-items( $items: 3, $tag: figure ) {
	margin-left: -15px;
	margin-right: -15px;
	&>*{
		padding-left: 15px;
		padding-right: 15px;
		float: left;
		width: 100/$items#{"%"};
	}

}